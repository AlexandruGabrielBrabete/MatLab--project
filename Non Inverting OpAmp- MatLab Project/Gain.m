function Gain()

% Get your screen size
screenSize = get(0, 'ScreenSize');

% 
Fig = figure('Name', 'Noninverting Operational Amplifier', ...
    'Units', 'pixels', ...  
    'Position', [0, 0, screenSize(3), screenSize(4)], ...  
    'NumberTitle', 'off', ... 
    'ToolBar', 'none', ... 
    'color', [0.8, 0.8, 0.8]);

% Create the figure window
GroupMeniu = uibuttongroup('Visible', 'on', ...
    'BackgroundColor', [0.5, 0.5, 0.5], ...   
    'ForegroundColor', [1, 1, 1], ...  
    'Title', 'Meniu', ...   
    'FontSize', 18, ...                   
    'TitlePosition', 'lefttop', ...        
    'Position', [0.05 0.85 0.90 0.15], ...  
    'BorderType', 'none', ...              
    'BorderColor', 'black');              

% Create menu title text
textTitlu = uicontrol('Style', 'text', ...
    'Units', 'normalized', ...
    'Position', [0.45 0.60 0.1 0.45], ...  
    'BackgroundColor', [1 1 1], ... 
    'ForegroundColor', 'black', ...      
    'String', 'Av/Ri', ...                
    'FontName', 'Times New Roman', ...   
    'FontSize', 24, ...                  
    'Parent', GroupMeniu);          

% Creating the Chapter List
chapterList = uicontrol('Style', 'popupmenu', ...
    'String', {'Av/Ri Graphs', 'I/O Graphs', 'Introduction'}, ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.25 0.8 0.1 0.25], ...  
    'Callback', @(src, event) selectChapter(src), ...
    'Parent', GroupMeniu); 

% Callback function for selecting chapters
function selectChapter(src)
    selectedChapter = src.String{src.Value};
    
    switch selectedChapter
        case 'Introduction'
            disp('Navigate to Introduction chapter');
            introduction();  
        case 'Grafice I/O'
            disp('Navigate to I/O Graphs chapter');
            Noninverting();   
        case 'Grafic Av/Ri'
            disp('Navigate to Av/Ri Graphs chapter');
            Gain();
    end
end

% Home button 
homeButton = uicontrol('Style', 'pushbutton', ...
    'String', 'Home', ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.35 0.6 0.1 0.4], ...   
    'Callback', @(src, event) goBackHome(), ...
    'Parent', GroupMeniu);  

function goBackHome()
    close(Fig);  
    introduction(); 
end


% "<" button 
backButton = uicontrol('Style', 'pushbutton', ...
    'String', '<', ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.15 0.6 0.1 0.4], ...   
    'Callback', @(src, event) goBackNeinverting(), ...
    'Parent', GroupMeniu); 

    function goBackNeinverting()
    close(Fig);  
    noninverting(); 
end


% "Close" button
closeButton = uicontrol('Style', 'pushbutton', ...
    'String', 'Close', ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.55 0.6 0.1 0.4], ...   
    'Callback', @(src, event) close(Fig), ...
    'Parent', GroupMeniu);  

% "Reset button" 
resetButton = uicontrol('Style', 'pushbutton', ...
    'String', 'Reset', ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.65 0.6 0.1 0.4], ...   
    'Callback', @(src, event) resetGain(), ...
    'Parent', GroupMeniu);  

% resetGain function
    function resetGain()
    close(Fig); % Close current window
    Gain(); % Call back the input function to reset it
end  

% ">" button 
nextButton = uicontrol('Style', 'pushbutton', ...
    'String', '>', ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.75 0.6 0.1 0.4], ...   
    'Callback', @(src, event) goBackHome(), ...
    'Parent', GroupMeniu);  


% User-defined parameters (initial values) 
Rf = 2000;            % Feedback resistance value (ohms);
Ri_min = 100;         % Minimum Input Resistance (ohms); 
Ri_max = 10000;       % Maximum Input Resistance (ohms); 
Ri_step = 100;        % Input Resistance Step (ohms).


% Set the style and size for edit buttons only
editParams = {'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1 1 1], 'ForegroundColor', 'blue'};

% Parameter panel
paramPanel = uipanel('Title', 'Parameter', ...
    'FontSize', 16, ...
    'Position', [0.05 0.55 0.90 0.25], ...
    'BackgroundColor', [0.8, 0.8, 0.8]);

% Interface elements for editable parameters
uicontrol('Parent', paramPanel, 'Style', 'text', 'Position', [10, 110, 100, 20], 'String', 'Rf', ...
          'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
hRf = uicontrol('Parent', paramPanel, 'Style', 'edit', 'Position', [120, 110, 100, 20], ...
                'String', num2str(Rf), editParams{:}, 'Callback', @(~,~) update_graph());

uicontrol('Parent', paramPanel, 'Style', 'text', 'Position', [10, 80, 100, 20], 'String', 'Ri Min', ...
          'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
hRiMin = uicontrol('Parent', paramPanel, 'Style', 'edit', 'Position', [120, 80, 100, 20], ...
                   'String', num2str(Ri_min), editParams{:}, 'Callback', @(~,~) update_graph());

uicontrol('Parent', paramPanel, 'Style', 'text', 'Position', [10, 50, 100, 20], 'String', 'Ri Max', ...
          'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
hRiMax = uicontrol('Parent', paramPanel, 'Style', 'edit', 'Position', [120, 50, 100, 20], ...
                   'String', num2str(Ri_max), editParams{:}, 'Callback', @(~,~) update_graph());

uicontrol('Parent', paramPanel, 'Style', 'text', 'Position', [10, 20, 100, 20], 'String', 'Ri Step', ...
          'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
hRiStep = uicontrol('Parent', paramPanel, 'Style', 'edit', 'Position', [120, 20, 100, 20], ...
                    'String', num2str(Ri_step), editParams{:}, 'Callback', @(~,~) update_graph());

% Chart update function
function update_graph()
    % Get the new values entered by the user
    Rf = str2double(get(hRf, 'String'));
    Ri_min = str2double(get(hRiMin, 'String'));
    Ri_max = str2double(get(hRiMax, 'String'));
    Ri_step = str2double(get(hRiStep, 'String'));

    % We generate the vector of values for Ri
    Ri = Ri_min:Ri_step:Ri_max;

    % We calculate the gain for each value of Ri
    Av = 1 + (Rf ./ Ri);

    % Graphic representation
    plot(ax, Ri, Av, 'b', 'LineWidth', 1.5);
    xlabel(ax, 'Input Resistance (Ri) [\Omega]');
    ylabel(ax, 'Gain (Av)');
    title(ax, 'Gain Chart (Av) by Entry Resistance (Ri)');
    grid(ax, 'on');
end

% We generate the vector of values for the initial Ri
Ri = Ri_min:Ri_step:Ri_max;

% We calculate the initial gain
Av = 1 + (Rf ./ Ri);

% Create an axes object for the chart
ax = axes('Parent', Fig, 'Units', 'normalized', 'Position', [0.05 0.15 0.9 0.4]);

% Initial graphic representation
plot(ax, Ri, Av, 'b', 'LineWidth', 1.5);
xlabel(ax, 'Input Resistance (Ri) [\Omega]');
ylabel(ax, 'Gain (Av)');
title(ax, 'Gain Chart (Av) by Entry Resistance (Ri)');
grid(ax, 'on');

end