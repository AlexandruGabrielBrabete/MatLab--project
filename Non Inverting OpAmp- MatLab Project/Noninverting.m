function Noninverting()
    % Non-inverting negative-feedback operational amplifier

    % Get your screen size
    screenSize = get(0, 'ScreenSize');

    % Create the figure window
    Fig = figure('Name','Noninverting Operational Amplifier', ...
        'Units','pixels', ...  
        'Position',[0, 0, screenSize(3), screenSize(4)], ...
        'NumberTitle','off', ... 
        'ToolBar', 'none', ... 
        'color', [0.8, 0.8, 0.8]);

% Create the menu with a group of buttons
GroupMeniu = uibuttongroup('Visible', 'on', ...
    'BackgroundColor', [0.5, 0.5, 0.5], ...   
    'ForegroundColor', [1, 1, 1], ...  
    'Title', 'Meniu', ...   
    'FontSize', 18, ...                    
    'TitlePosition', 'lefttop', ...        
    'Position', [0.04 0.70 0.32 0.15], ...  
    'BorderType', 'none', ...             
    'BorderColor', 'black');              

% Create menu title text
textTitle = uicontrol('Style', 'text', ...
    'Units', 'normalized', ...
    'Position', [0.37 0.60 0.3 0.45], ...  
    'BackgroundColor', [1 1 1], ... 
    'ForegroundColor', 'black', ...      
    'String', 'I/0 Graphs', ...                
    'FontName', 'Times New Roman', ...   
    'FontSize', 24, ...                  
    'Parent', GroupMeniu);          

% Crearea listei de capitole
chapterList = uicontrol('Style', 'popupmenu', ...
    'String', {'I/O Graphs', 'Introduction', 'Av/Ri Graphs'}, ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.07 0.8 0.17 0.25], ...  
    'Callback', @(src, event) selectChapter(src), ...
    'Parent', GroupMeniu); 

% Functia Callback pentru selectarea capitolelor
function selectChapter(src)
    selectedChapter = src.String{src.Value};
    
    switch selectedChapter
        case 'Introduction'
            disp('Navigation to the Introduction chapter');
            introducere();  
        case 'I/O Graphs'
            disp('Navigation to the I/O Graphs chapter');
            neinversor();   
        case 'Av/Ri Graphs'
            disp('Navigation to the Av/Ri Graphs chapter');
            castig();
    end
end

% Home button 
homeButton = uicontrol('Style', 'pushbutton', ...
    'String', 'Home', ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.24 0.6 0.1 0.4], ...   
    'Callback', @(src, event) goBackHome(), ...
    'Parent', GroupMeniu);  

function goBackHome()
    close(Fig); 
    introduction(); 
end

% Butonul "<" 
backButton = uicontrol('Style', 'pushbutton', ...
    'String', '<', ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.01 0.6 0.06 0.4], ...   
    'Callback', @(src, event) goBackHome(), ...
    'Parent', GroupMeniu);

% "Close" button
closeButton = uicontrol('Style', 'pushbutton', ...
    'String', 'Close', ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.72 0.6 0.1 0.4], ...   
    'Callback', @(src, event) close(Fig), ...
    'Parent', GroupMeniu); 

% "Reset" button 
resetButton = uicontrol('Style', 'pushbutton', ...
    'String', 'Reset', ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.82 0.6 0.1 0.4], ...   
    'Callback', @(src, event) resetNoninverting(), ...
    'Parent', GroupMeniu);  

% resetNeinverring function
    function resetNoninverting()
    close(Fig); % Close current window
    Noninverting (); % Call back the input function to reset it
end  

% ">" button 
nextButton = uicontrol('Style', 'pushbutton', ...
    'String', '>', ...
    'FontSize', 16, ...
    'FontName', 'Times New Roman', ...
    'ForegroundColor', [1, 1, 1], ...
    'BackgroundColor', [0.2, 0.2, 0.2], ...
    'Units', 'normalized', ...
    'Position', [0.92 0.6 0.06 0.4], ...   
    'Callback', @(src, event) goBackGain(), ...
    'Parent', GroupMeniu);  

    function goBackGain()
    close(Fig);  
    Gain(); 
end

    % Create Panel for Parameters
    paramPanel = uipanel('Parent', Fig, 'Title', 'Circuits parameters:', ...
                         'FontSize', 18, 'Position', [0.03, 0.12, 0.15, 0.5], ...
                         'BackgroundColor', [1, 1, 1], ...   
                         'ForegroundColor', 'black', ...      
                         'TitlePosition', 'lefttop', ...      
                         'Tag', 'radiobutton', ...            
                         'BorderType', 'line', ...            
                         'BorderColor', 'black');            

    % Set the style and size for edit buttons only
    editParams = {'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1 1 1], 'ForegroundColor', 'blue'};

    % Interface elements in the Parameters pane
    uicontrol('Parent', paramPanel, 'Style', 'text', 'Position', [10, 110, 100, 20], 'String', 'V+ (V)', ...
              'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
    hVp = uicontrol('Parent', paramPanel, 'Style', 'edit', 'Position', [120, 110, 100, 20], ...
                    'String', '8', editParams{:}, 'Callback', @(~,~) update_graph());

    uicontrol('Parent', paramPanel, 'Style', 'text', 'Position', [10, 80, 100, 20], 'String', 'V- (V)', ...
              'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
    hVn = uicontrol('Parent', paramPanel, 'Style', 'edit', 'Position', [120, 80, 100, 20], ...
                    'String', '-15', editParams{:}, 'Callback', @(~,~) update_graph());

    uicontrol('Parent', paramPanel, 'Style', 'text', 'Position', [10, 260, 100, 20], 'String', 'Perioada (s)', ...
              'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
    hT = uicontrol('Parent', paramPanel, 'Style', 'edit', 'Position', [120, 260, 100, 20], ...
                   'String', '2', editParams{:}, 'Callback', @(~,~) update_graph());

    uicontrol('Parent', paramPanel, 'Style', 'text', 'Position', [10, 230, 100, 20], 'String', 'Frecvență (Hz)', ...
              'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
    hf = uicontrol('Parent', paramPanel, 'Style', 'edit', 'Position', [120, 230, 100, 20], ...
                   'String', '100', editParams{:}, 'Callback', @(~,~) update_graph());

    uicontrol('Parent', paramPanel, 'Style', 'text', 'Position', [10, 200, 100, 20], 'String', 'Rf (Ohm)', ...
              'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
    hRf = uicontrol('Parent', paramPanel, 'Style', 'edit', 'Position', [120, 200, 100, 20], ...
                    'String', '3000', editParams{:}, 'Callback', @(~,~) update_graph());

    uicontrol('Parent', paramPanel, 'Style', 'text', 'Position', [10, 170, 100, 20], 'String', 'Rg (Ohm)', ...
              'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
    hRg = uicontrol('Parent', paramPanel, 'Style', 'edit', 'Position', [120, 170, 100, 20], ...
                    'String', '500', editParams{:}, 'Callback', @(~,~) update_graph());

    uicontrol('Parent', paramPanel, 'Style', 'text', 'Position', [10, 140, 100, 20], 'String', 'Amplitudine', ...
              'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
    hAmplitude = uicontrol('Parent', paramPanel, 'Style', 'edit', 'Position', [120, 140, 100, 20], ...
                           'String', '1', editParams{:}, 'Callback', @(~,~) update_graph());

    % Create Signal Panel
    signalPanel = uipanel('Parent', Fig, 'Title', 'Signal Type:', ...
                          'FontSize', 18, 'Position', [0.21, 0.12, 0.15, 0.5], ...
                          'BackgroundColor', [1, 1, 1], ...   
                          'ForegroundColor', 'black', ...      
                          'TitlePosition', 'lefttop', ...      
                          'Tag', 'radiobutton', ...            
                          'BorderType', 'line', ...            
                          'BorderColor', 'black');            

    % Interface elements in the Signal panel
    uicontrol('Parent', signalPanel, 'Style', 'text', 'Position', [10, 100, 100, 20], 'String', 'Signal type', ...
              'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1, 1, 1], 'ForegroundColor', 'black');
    hSignalType = uicontrol('Parent', signalPanel, 'Style', 'popupmenu', 'Position', [120, 100, 100, 20], ...
                            'String', {'SIN', 'TRI', 'SQR'}, ...
                            'Value', 1, 'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1 1 1], 'ForegroundColor', 'black', 'Callback', @(~,~) update_graph());

    hCheckVin = uicontrol('Parent', signalPanel, 'Style', 'checkbox', 'Position', [10, 140, 200, 20], ...
                          'String', 'Vin (Semnal de intrare)', 'Value', 1, 'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1 1 1], 'ForegroundColor', 'black', ...
                          'Callback', @(~,~) update_graph());
    hCheckVout = uicontrol('Parent', signalPanel, 'Style', 'checkbox', 'Position', [10, 170, 200, 20], ...
                           'String', 'Vout (Semnal de ieșire)', 'Value', 1, 'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1 1 1], 'ForegroundColor', 'black', ...
                           'Callback', @(~,~) update_graph());
    hCheckVinVout = uicontrol('Parent', signalPanel, 'Style', 'checkbox', 'Position', [10, 230, 200, 20], ...
                              'String', 'Vin și Vout combinate', 'Value', 0, 'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1 1 1], 'ForegroundColor', 'black', ...
                              'Callback', @(~,~) update_graph());
    hCheckCSTV = uicontrol('Parent', signalPanel, 'Style', 'checkbox', 'Position', [10, 200, 200, 20], ...
                           'String', 'CSTV', 'Value', 0, 'FontName', 'Times New Roman', 'FontSize', 16, 'BackgroundColor', [1 1 1], 'ForegroundColor', 'black', ...
                           'Callback', @(~,~) update_graph());

    % Graphic panels
    hAxes = arrayfun(@(~) axes('Parent', Fig), 1:4);

    % Function for updating graphs
    function update_graph()
        % We read the current values in the interface
        Vp = str2double(get(hVp, 'String'));
        Vn = str2double(get(hVn, 'String'));
        T = str2double(get(hT, 'String'));
        f = str2double(get(hf, 'String'));
        Rf = str2double(get(hRf, 'String'));
        Rg = str2double(get(hRg, 'String'));
        signal_type = get(hSignalType, 'Value');
        amplitude = str2double(get(hAmplitude, 'String'));

        t = linspace(0, T / f, 1000);
        switch signal_type
            case 1
                Vin = amplitude * sin(2 * pi * f * t);
            case 2
                Vin = amplitude * sawtooth(2 * pi * f * t, 0.5);
            case 3
                Vin = amplitude * square(2 * pi * f * t, 50);
        end

        Av = 1 + Rf / Rg;
        Vout = min(max(Av * Vin, Vn), Vp);

        checks = [get(hCheckVin, 'Value'), get(hCheckVout, 'Value'), get(hCheckVinVout, 'Value'), get(hCheckCSTV, 'Value')];
        active_axes = find(checks);
        num_active = numel(active_axes);

        % Size of the graphs
        margin = 0.1; 
        if num_active == 2
            height = (1 - (num_active + 1) * margin) / num_active * 0.85;  
        elseif num_active == 3
            height = (1 - (num_active + 1) * margin) / num_active * 0.9;  
        elseif num_active == 4
            height = (1 - (num_active + 1) * margin) / num_active * 0.95;  
        else
            height = (1 - (num_active + 1) * margin) / num_active;  
        end

        % We adjust the width of the graphs to make them narrower
        width = 0.5;  

        % We clean inactive axles
        for i = 1:4
            cla(hAxes(i));
            set(hAxes(i), 'Visible', 'off');
        end

        % We update the active axes
        for i = 1:num_active
            ax = hAxes(active_axes(i));
            set(ax, 'Visible', 'on');
            set(ax, 'Position', [0.4, 1 - (i * (height + margin)), width, height]);  
            axes(ax);
            grid on;
            switch active_axes(i)
                case 1
                    plot(t, Vin, 'b'); title('Input voltage'); xlabel('t [s]'); ylabel('Vin [V]');
                case 2
                    plot(t, Vout, 'r'); title('Output Voltage'); xlabel('t [s]'); ylabel('Vin[V]');
                case 3
                    plot(t, Vin, 'b', t, Vout, 'r'); title('Vin și Vout combined'); xlabel('t [s]'); ylabel('Vin, Vout [V]');
                case 4
                    plot(Vin, Vout, 'g'); title('CSTV feature'); xlabel('Vin [V]'); ylabel('Vout [V]');
            end
        end
    end

    update_graph();
end